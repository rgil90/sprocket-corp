"""squashed inital tables

Revision ID: 0e9587bbbd3d
Revises:
Create Date: 2024-06-04 02:53:41.772377

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0e9587bbbd3d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "locations",
        sa.Column("address_1", sa.String(), nullable=False),
        sa.Column("address_2", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=False),
        sa.Column("state", sa.String(), nullable=True),
        sa.Column("country_code", sa.String(), nullable=False),
        sa.Column("postal_code", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("postal_code"),
    )
    op.create_table(
        "sprocket_types",
        sa.Column("teeth", sa.Integer(), nullable=False),
        sa.Column("pitch_diameter", sa.Integer(), nullable=False),
        sa.Column("pitch", sa.Integer(), nullable=False),
        sa.Column("outside_diameter", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "factories",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("sprocket_production_goal", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "factories_histories",
        sa.Column("factory_id", sa.Integer(), nullable=False),
        sa.Column("sprocket_production_goal", sa.Integer(), nullable=False),
        sa.Column("sprocket_production_actual", sa.Integer(), nullable=False),
        sa.Column("sprocket_production_timestamp", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["factory_id"],
            ["factories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sprockets",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("sprocket_type_id", sa.Integer(), nullable=False),
        sa.Column("factory_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["factory_id"],
            ["factories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sprocket_type_id"],
            ["sprocket_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sprockets")
    op.drop_table("factories_histories")
    op.drop_table("factories")
    op.drop_table("sprocket_types")
    op.drop_table("locations")
    # ### end Alembic commands ###
